{"version":3,"file":"ng6x-editor.umd.js.map","sources":["ng://ng6x-editor/app/ngx-editor/common/utils/ngx-editor.utils.ts","ng://ng6x-editor/app/ngx-editor/common/services/command-executor.service.ts","ng://ng6x-editor/app/ngx-editor/common/services/message.service.ts","ng://ng6x-editor/app/ngx-editor/common/ngx-editor.defaults.ts","ng://ng6x-editor/app/ngx-editor/ngx-editor.component.ts","ng://ng6x-editor/app/ngx-editor/ngx-grippie/ngx-grippie.component.ts","ng://ng6x-editor/app/ngx-editor/ngx-editor-message/ngx-editor-message.component.ts","ng://ng6x-editor/app/ngx-editor/ngx-editor-toolbar/ngx-editor-toolbar.component.ts","ng://ng6x-editor/app/ngx-editor/ngx-editor.module.ts"],"sourcesContent":["/**\r\n * enable or disable toolbar based on configuration\r\n *\r\n * @param value toolbar item\r\n * @param toolbar toolbar configuration object\r\n */\r\nexport function canEnableToolbarOptions(value: string, toolbar: any): boolean {\r\n\r\n    if (value) {\r\n\r\n        if (toolbar['length'] === 0) {\r\n            return true;\r\n        } else {\r\n\r\n            const found = toolbar.filter(array => {\r\n                return array.indexOf(value) !== -1;\r\n            });\r\n\r\n            return found.length ? true : false;\r\n        }\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\n/**\r\n * set editor configuration\r\n *\r\n * @param value configuration via [config] property\r\n * @param ngxEditorConfig default editor configuration\r\n * @param input direct configuration inputs via directives\r\n */\r\nexport function getEditorConfiguration(value: any, ngxEditorConfig: any, input: any): any {\r\n\r\n    for (const i in ngxEditorConfig) {\r\n        if (i) {\r\n\r\n            if (input[i] !== undefined) {\r\n                value[i] = input[i];\r\n            }\r\n\r\n            if (!value.hasOwnProperty(i)) {\r\n                value[i] = ngxEditorConfig[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\n/**\r\n * return vertical if the element is the resizer property is set to basic\r\n *\r\n * @param resizer type of resizer, either basic or stack\r\n */\r\nexport function canResize(resizer: string): any {\r\n    if (resizer === 'basic') {\r\n        return 'vertical';\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * save selection when the editor is focussed out\r\n */\r\nexport function saveSelection(): any {\r\n    if (window.getSelection) {\r\n        const sel = window.getSelection();\r\n        if (sel.getRangeAt && sel.rangeCount) {\r\n            return sel.getRangeAt(0);\r\n        }\r\n    } else if (document.getSelection && document.createRange) {\r\n        return document.createRange();\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * restore selection when the editor is focussed in\r\n *\r\n * @param range saved selection when the editor is focussed out\r\n */\r\nexport function restoreSelection(range): boolean {\r\n    if (range) {\r\n        if (window.getSelection) {\r\n            const sel = window.getSelection();\r\n            sel.removeAllRanges();\r\n            sel.addRange(range);\r\n            return true;\r\n        } else if (document.getSelection && range.select) {\r\n            range.select();\r\n            return true;\r\n        }\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpRequest } from '@angular/common/http';\r\nimport * as Utils from '../utils/ngx-editor.utils';\r\n\r\n@Injectable()\r\nexport class CommandExecutorService {\r\n\r\n  /** saves the selection from the editor when focussed out */\r\n  savedSelection: any = undefined;\r\n\r\n  /**\r\n   *\r\n   * @param _http HTTP Client for making http requests\r\n   */\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  /**\r\n   * executes command from the toolbar\r\n   *\r\n   * @param command command to be executed\r\n   */\r\n  execute(command: string): void {\r\n\r\n    if (!this.savedSelection && command !== 'enableObjectResizing') {\r\n      throw new Error('Range out of Editor');\r\n    }\r\n\r\n    if (command === 'enableObjectResizing') {\r\n      document.execCommand('enableObjectResizing', true, true);\r\n      return;\r\n    }\r\n\r\n    if (command === 'blockquote') {\r\n      document.execCommand('formatBlock', false, 'blockquote');\r\n      return;\r\n    }\r\n\r\n    if (command === 'removeBlockquote') {\r\n      document.execCommand('formatBlock', false, 'div');\r\n      return;\r\n    }\r\n\r\n    document.execCommand(command, false, null);\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * inserts image in the editor\r\n   *\r\n   * @param imageURI url of the image to be inserted\r\n   */\r\n  insertImage(imageURI: string): void {\r\n    if (this.savedSelection) {\r\n      if (imageURI) {\r\n        const restored = Utils.restoreSelection(this.savedSelection);\r\n        if (restored) {\r\n          const inserted = document.execCommand('insertImage', false, imageURI);\r\n          if (!inserted) {\r\n            throw new Error('Invalid URL');\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      throw new Error('Range out of the editor');\r\n    }\r\n    return;\r\n  }\r\n\r\n  /**\r\n * inserts image in the editor\r\n *\r\n * @param videParams url of the image to be inserted\r\n */\r\n  insertVideo(videParams: any): void {\r\n    if (this.savedSelection) {\r\n      if (videParams) {\r\n        const restored = Utils.restoreSelection(this.savedSelection);\r\n        if (restored) {\r\n          if (this.isYoutubeLink(videParams.videoUrl)) {\r\n            const youtubeURL = '<iframe width=\"' + videParams.width + '\" height=\"' + videParams.height + '\"'\r\n              + 'src=\"' + videParams.videoUrl + '\"></iframe>';\r\n            this.insertHtml(youtubeURL);\r\n          } else if (this.checkTagSupportInBrowser('video')) {\r\n\r\n            if (this.isValidURL(videParams.videoUrl)) {\r\n              const videoSrc = '<video width=\"' + videParams.width + '\" height=\"' + videParams.height + '\"'\r\n                + ' controls=\"true\"><source src=\"' + videParams.videoUrl + '\"></video>';\r\n              this.insertHtml(videoSrc);\r\n            } else {\r\n              throw new Error('Invalid video URL');\r\n            }\r\n\r\n          } else {\r\n            throw new Error('Unable to insert video');\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      throw new Error('Range out of the editor');\r\n    }\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * checks the input url is a valid youtube URL or not\r\n   *\r\n   * @param url Youtue URL\r\n   */\r\n  private isYoutubeLink(url: string): boolean {\r\n    const ytRegExp = /^(http(s)?:\\/\\/)?((w){3}.)?youtu(be|.be)?(\\.com)?\\/.+/;\r\n    return ytRegExp.test(url);\r\n  }\r\n\r\n  /**\r\n   * check whether the string is a valid url or not\r\n   * @param url url\r\n   */\r\n  private isValidURL(url: string) {\r\n    const urlRegExp = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\r\n    return urlRegExp.test(url);\r\n  }\r\n\r\n  /**\r\n   * uploads image to the server\r\n   *\r\n   * @param file file that has to be uploaded\r\n   * @param endPoint enpoint to which the image has to be uploaded\r\n   */\r\n  uploadImage(file: File, endPoint: string): any {\r\n\r\n    if (!endPoint) {\r\n      throw new Error('Image Endpoint isn`t provided or invalid');\r\n    }\r\n\r\n    const formData: FormData = new FormData();\r\n\r\n    if (file) {\r\n\r\n      formData.append('file', file);\r\n\r\n      const req = new HttpRequest('POST', endPoint, formData, {\r\n        reportProgress: true\r\n      });\r\n\r\n      return this._http.request(req);\r\n\r\n    } else {\r\n      throw new Error('Invalid Image');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * inserts link in the editor\r\n   *\r\n   * @param params parameters that holds the information for the link\r\n   */\r\n  createLink(params: any): void {\r\n\r\n    if (this.savedSelection) {\r\n      /**\r\n       * check whether the saved selection contains a range or plain selection\r\n       */\r\n      if (params.urlNewTab) {\r\n        const newUrl = '<a href=\"' + params.urlLink + '\" target=\"_blank\">' + params.urlText + '</a>';\r\n\r\n        if (document.getSelection().type !== 'Range') {\r\n          const restored = Utils.restoreSelection(this.savedSelection);\r\n          if (restored) {\r\n            this.insertHtml(newUrl);\r\n          }\r\n        } else {\r\n          throw new Error('Only new links can be inserted. You cannot edit URL`s');\r\n        }\r\n      } else {\r\n        const restored = Utils.restoreSelection(this.savedSelection);\r\n        if (restored) {\r\n          document.execCommand('createLink', false, params.urlLink);\r\n        }\r\n      }\r\n    } else {\r\n      throw new Error('Range out of the editor');\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * insert color either font or background\r\n   *\r\n   * @param color color to be inserted\r\n   * @param where where the color has to be inserted either text/background\r\n   */\r\n  insertColor(color: string, where: string): void {\r\n\r\n    if (this.savedSelection) {\r\n      const restored = Utils.restoreSelection(this.savedSelection);\r\n      if (restored && this.checkSelection()) {\r\n        if (where === 'textColor') {\r\n          document.execCommand('foreColor', false, color);\r\n        } else {\r\n          document.execCommand('hiliteColor', false, color);\r\n        }\r\n      }\r\n\r\n    } else {\r\n      throw new Error('Range out of the editor');\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * set font size for text\r\n   *\r\n   * @param fontSize font-size to be set\r\n   */\r\n  setFontSize(fontSize: string): void {\r\n\r\n    if (this.savedSelection && this.checkSelection()) {\r\n      const deletedValue = this.deleteAndGetElement();\r\n\r\n      if (deletedValue) {\r\n\r\n        const restored = Utils.restoreSelection(this.savedSelection);\r\n\r\n        if (restored) {\r\n          if (this.isNumeric(fontSize)) {\r\n            const fontPx = '<span style=\"font-size: ' + fontSize + 'px;\">' + deletedValue + '</span>';\r\n            this.insertHtml(fontPx);\r\n          } else {\r\n            const fontPx = '<span style=\"font-size: ' + fontSize + ';\">' + deletedValue + '</span>';\r\n            this.insertHtml(fontPx);\r\n          }\r\n        }\r\n      }\r\n\r\n    } else {\r\n      throw new Error('Range out of the editor');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * set font name/family for text\r\n   *\r\n   * @param fontName font-family to be set\r\n   */\r\n  setFontName(fontName: string): void {\r\n\r\n    if (this.savedSelection && this.checkSelection()) {\r\n      const deletedValue = this.deleteAndGetElement();\r\n\r\n      if (deletedValue) {\r\n\r\n        const restored = Utils.restoreSelection(this.savedSelection);\r\n\r\n        if (restored) {\r\n          if (this.isNumeric(fontName)) {\r\n            const fontFamily = '<span style=\"font-family: ' + fontName + 'px;\">' + deletedValue + '</span>';\r\n            this.insertHtml(fontFamily);\r\n          } else {\r\n            const fontFamily = '<span style=\"font-family: ' + fontName + ';\">' + deletedValue + '</span>';\r\n            this.insertHtml(fontFamily);\r\n          }\r\n        }\r\n      }\r\n\r\n    } else {\r\n      throw new Error('Range out of the editor');\r\n    }\r\n  }\r\n\r\n  /** insert HTML */\r\n  private insertHtml(html: string): void {\r\n\r\n    const isHTMLInserted = document.execCommand('insertHTML', false, html);\r\n\r\n    if (!isHTMLInserted) {\r\n      throw new Error('Unable to perform the operation');\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * check whether the value is a number or string\r\n   * if number return true\r\n   * else return false\r\n   */\r\n  private isNumeric(value: any): boolean {\r\n    return /^-{0,1}\\d+$/.test(value);\r\n  }\r\n\r\n  /** delete the text at selected range and return the value */\r\n  private deleteAndGetElement(): any {\r\n\r\n    let slectedText;\r\n\r\n    if (this.savedSelection) {\r\n      slectedText = this.savedSelection.toString();\r\n      this.savedSelection.deleteContents();\r\n      return slectedText;\r\n    }\r\n\r\n    return false;\r\n\r\n  }\r\n\r\n  /** check any slection is made or not */\r\n  private checkSelection(): any {\r\n\r\n    const slectedText = this.savedSelection.toString();\r\n\r\n    if (slectedText.length === 0) {\r\n      throw new Error('No Selection Made');\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * check tag is supported by browser or not\r\n   *\r\n   * @param tag HTML tag\r\n   */\r\n  private checkTagSupportInBrowser(tag: string): boolean {\r\n    return !(document.createElement(tag) instanceof HTMLUnknownElement);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n/** time in which the message has to be cleared */\r\nconst DURATION = 7000;\r\n\r\n@Injectable()\r\nexport class MessageService {\r\n\r\n  /** variable to hold the user message */\r\n  private message: Subject<string> = new Subject();\r\n\r\n  constructor() { }\r\n\r\n  /** returns the message sent by the editor */\r\n  getMessage(): Observable<string> {\r\n    return this.message.asObservable();\r\n  }\r\n\r\n  /**\r\n   * sends message to the editor\r\n   *\r\n   * @param message message to be sent\r\n   */\r\n  sendMessage(message: string): void {\r\n    this.message.next(message);\r\n    this.clearMessageIn(DURATION);\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * a short interval to clear message\r\n   *\r\n   * @param milliseconds time in seconds in which the message has to be cleared\r\n   */\r\n  private clearMessageIn(milliseconds: number): void {\r\n    setTimeout(() => {\r\n      this.message.next(undefined);\r\n    }, milliseconds);\r\n    return;\r\n  }\r\n\r\n}\r\n","/**\r\n * toolbar default configuration\r\n */\r\nexport const ngxEditorConfig = {\r\n    editable: true,\r\n    spellcheck: true,\r\n    height: 'auto',\r\n    minHeight: '0',\r\n    width: 'auto',\r\n    minWidth: '0',\r\n    translate: 'yes',\r\n    enableToolbar: true,\r\n    showToolbar: true,\r\n    placeholder: 'Enter text here...',\r\n    imageEndPoint: '',\r\n    toolbar: [\r\n        ['bold', 'italic', 'underline', 'strikeThrough', 'superscript', 'subscript'],\r\n        ['fontName', 'fontSize', 'color'],\r\n        ['justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull', 'indent', 'outdent'],\r\n        ['cut', 'copy', 'delete', 'removeFormat', 'undo', 'redo'],\r\n        ['paragraph', 'blockquote', 'removeBlockquote', 'horizontalLine', 'orderedList', 'unorderedList'],\r\n        ['link', 'unlink', 'image', 'video']\r\n    ]\r\n};\r\n","import {\r\n  Component, OnInit, Input, Output, ViewChild,\r\n  EventEmitter, Renderer2, forwardRef\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\nimport { CommandExecutorService } from './common/services/command-executor.service';\r\nimport { MessageService } from './common/services/message.service';\r\n\r\nimport { ngxEditorConfig } from './common/ngx-editor.defaults';\r\nimport * as Utils from './common/utils/ngx-editor.utils';\r\n\r\n@Component({\r\n  selector: 'app-ng6x-editor',\r\n  templateUrl: './ngx-editor.component.html',\r\n  styleUrls: ['./ngx-editor.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => NgxEditorComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\n\r\nexport class NgxEditorComponent implements OnInit, ControlValueAccessor {\r\n\r\n  /** Specifies weather the textarea to be editable or not */\r\n  @Input() editable: boolean;\r\n  /** The spellcheck property specifies whether the element is to have its spelling and grammar checked or not. */\r\n  @Input() spellcheck: boolean;\r\n  /** Placeholder for the textArea */\r\n  @Input() placeholder: string;\r\n  /**\r\n   * The translate property specifies whether the content of an element should be translated or not.\r\n   *\r\n   * Check https://www.w3schools.com/tags/att_global_translate.asp for more information and browser support\r\n   */\r\n  @Input() translate: string;\r\n  /** Sets height of the editor */\r\n  @Input() height: string;\r\n  /** Sets minimum height for the editor */\r\n  @Input() minHeight: string;\r\n  /** Sets Width of the editor */\r\n  @Input() width: string;\r\n  /** Sets minimum width of the editor */\r\n  @Input() minWidth: string;\r\n  /**\r\n   * Toolbar accepts an array which specifies the options to be enabled for the toolbar\r\n   *\r\n   * Check ngxEditorConfig for toolbar configuration\r\n   *\r\n   * Passing an empty array will enable all toolbar\r\n   */\r\n  @Input() toolbar: Object;\r\n  /**\r\n   * The editor can be resized vertically.\r\n   *\r\n   * `basic` resizer enables the html5 reszier. Check here https://www.w3schools.com/cssref/css3_pr_resize.asp\r\n   *\r\n   * `stack` resizer enable a resizer that looks like as if in https://stackoverflow.com\r\n   */\r\n  @Input() resizer = 'stack';\r\n  /**\r\n   * The config property is a JSON object\r\n   *\r\n   * All avaibale inputs inputs can be provided in the configuration as JSON\r\n   * inputs provided directly are considered as top priority\r\n   */\r\n  @Input() config = ngxEditorConfig;\r\n  /** Weather to show or hide toolbar */\r\n  @Input() showToolbar: boolean;\r\n  /** Weather to enable or disable the toolbar */\r\n  @Input() enableToolbar: boolean;\r\n  /** Endpoint for which the image to be uploaded */\r\n  @Input() imageEndPoint: string;\r\n\r\n  /** emits `blur` event when focused out from the textarea */\r\n  @Output() blur: EventEmitter<string> = new EventEmitter<string>();\r\n  /** emits `focus` event when focused in to the textarea */\r\n  @Output() focus: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  @ViewChild('ngxTextArea') textArea: any;\r\n  @ViewChild('ngxWrapper') ngxWrapper: any;\r\n\r\n  Utils: any = Utils;\r\n\r\n  private onChange: (value: string) => void;\r\n  private onTouched: () => void;\r\n\r\n  /**\r\n   * @param _messageService service to send message to the editor message component\r\n   * @param _commandExecutor executes command from the toolbar\r\n   * @param _renderer access and manipulate the dom element\r\n   */\r\n  constructor(\r\n    private _messageService: MessageService,\r\n    private _commandExecutor: CommandExecutorService,\r\n    private _renderer: Renderer2) { }\r\n\r\n  /**\r\n   * events\r\n   */\r\n  onTextAreaFocus(): void {\r\n    this.focus.emit('focus');\r\n    return;\r\n  }\r\n\r\n  /** focus the text area when the editor is focussed */\r\n  onEditorFocus() {\r\n    this.textArea.nativeElement.focus();\r\n  }\r\n\r\n  /**\r\n   * Executed from the contenteditable section while the input property changes\r\n   * @param html html string from contenteditable\r\n   */\r\n  onContentChange(html: string): void {\r\n\r\n    if (typeof this.onChange === 'function') {\r\n      this.onChange(html);\r\n      this.togglePlaceholder(html);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  onTextAreaBlur(): void {\r\n\r\n    /** save selection if focussed out */\r\n    this._commandExecutor.savedSelection = Utils.saveSelection();\r\n\r\n    if (typeof this.onTouched === 'function') {\r\n      this.onTouched();\r\n    }\r\n    this.blur.emit('blur');\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * resizing text area\r\n   *\r\n   * @param offsetY vertical height of the eidtable portion of the editor\r\n   */\r\n  resizeTextArea(offsetY: number): void {\r\n    let newHeight = parseInt(this.height, 10);\r\n    newHeight += offsetY;\r\n    this.height = newHeight + 'px';\r\n    this.textArea.nativeElement.style.height = this.height;\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * editor actions, i.e., executes command from toolbar\r\n   *\r\n   * @param commandName name of the command to be executed\r\n   */\r\n  executeCommand(commandName: string): void {\r\n\r\n    try {\r\n      this._commandExecutor.execute(commandName);\r\n    } catch (error) {\r\n      this._messageService.sendMessage(error.message);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Write a new value to the element.\r\n   *\r\n   * @param value value to be executed when there is a change in contenteditable\r\n   */\r\n  writeValue(value: any): void {\r\n\r\n    this.togglePlaceholder(value);\r\n\r\n    if (value === null || value === undefined || value === '' || value === '<br>') {\r\n      value = null;\r\n    }\r\n\r\n    this.refreshView(value);\r\n  }\r\n\r\n  /**\r\n   * Set the function to be called\r\n   * when the control receives a change event.\r\n   *\r\n   * @param fn a function\r\n   */\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  /**\r\n   * Set the function to be called\r\n   * when the control receives a touch event.\r\n   *\r\n   * @param fn a function\r\n   */\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  /**\r\n   * refresh view/HTML of the editor\r\n   *\r\n   * @param value html string from the editor\r\n   */\r\n  refreshView(value: string): void {\r\n    const normalizedValue = value === null ? '' : value;\r\n    this._renderer.setProperty(this.textArea.nativeElement, 'innerHTML', normalizedValue);\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * toggles placeholder based on input string\r\n   *\r\n   * @param value A HTML string from the editor\r\n   */\r\n  togglePlaceholder(value: any): void {\r\n    if (!value || value === '<br>' || value === '') {\r\n      this._renderer.addClass(this.ngxWrapper.nativeElement, 'show-placeholder');\r\n    } else {\r\n      this._renderer.removeClass(this.ngxWrapper.nativeElement, 'show-placeholder');\r\n    }\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * returns a json containing input params\r\n   */\r\n  getCollectiveParams(): any {\r\n    return {\r\n      editable: this.editable,\r\n      spellcheck: this.spellcheck,\r\n      placeholder: this.placeholder,\r\n      translate: this.translate,\r\n      height: this.height,\r\n      minHeight: this.minHeight,\r\n      width: this.width,\r\n      minWidth: this.minWidth,\r\n      enableToolbar: this.enableToolbar,\r\n      showToolbar: this.showToolbar,\r\n      imageEndPoint: this.imageEndPoint,\r\n      toolbar: this.toolbar\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    /**\r\n     * set configuartion\r\n     */\r\n    this.config = this.Utils.getEditorConfiguration(this.config, ngxEditorConfig, this.getCollectiveParams());\r\n\r\n    this.height = this.height || this.textArea.nativeElement.offsetHeight;\r\n\r\n    this.executeCommand('enableObjectResizing');\r\n\r\n  }\r\n\r\n}\r\n","import { Component, HostListener } from '@angular/core';\r\nimport { NgxEditorComponent } from '../ngx-editor.component';\r\n\r\n@Component({\r\n  selector: 'app-ngx-grippie',\r\n  templateUrl: './ngx-grippie.component.html',\r\n  styleUrls: ['./ngx-grippie.component.scss']\r\n})\r\n\r\nexport class NgxGrippieComponent {\r\n\r\n  /** height of the editor */\r\n  height: number;\r\n  /** previous value befor resizing the editor */\r\n  oldY = 0;\r\n  /** set to true on mousedown event */\r\n  grabber = false;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param _editorComponent Editor component\r\n   */\r\n  constructor(private _editorComponent: NgxEditorComponent) { }\r\n\r\n  /**\r\n   *\r\n   * @param event Mouseevent\r\n   *\r\n   * Update the height of the editor when the grabber is dragged\r\n   */\r\n  @HostListener('document:mousemove', ['$event']) onMouseMove(event: MouseEvent) {\r\n\r\n    if (!this.grabber) {\r\n      return;\r\n    }\r\n\r\n    this._editorComponent.resizeTextArea(event.clientY - this.oldY);\r\n    this.oldY = event.clientY;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param event Mouseevent\r\n   *\r\n   * set the grabber to false on mouse up action\r\n   */\r\n  @HostListener('document:mouseup', ['$event']) onMouseUp(event: MouseEvent) {\r\n    this.grabber = false;\r\n  }\r\n\r\n  @HostListener('mousedown', ['$event']) onResize(event: MouseEvent, resizer?: Function) {\r\n    this.grabber = true;\r\n    this.oldY = event.clientY;\r\n    event.preventDefault();\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { MessageService } from '../common/services/message.service';\r\n\r\n@Component({\r\n  selector: 'app-ng6x-editor-message',\r\n  templateUrl: './ngx-editor-message.component.html',\r\n  styleUrls: ['./ngx-editor-message.component.scss']\r\n})\r\n\r\nexport class NgxEditorMessageComponent {\r\n\r\n  /** property that holds the message to be displayed on the editor */\r\n  ngxMessage = undefined;\r\n\r\n  /**\r\n   * @param _messageService service to send message to the editor\r\n   */\r\n  constructor(private _messageService: MessageService) {\r\n    this._messageService.getMessage().subscribe((message: string) => this.ngxMessage = message);\r\n  }\r\n\r\n  /**\r\n   * clears editor message\r\n   */\r\n  clearMessage(): void {\r\n    this.ngxMessage = undefined;\r\n    return;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { PopoverConfig } from 'ngx-bootstrap';\r\nimport { CommandExecutorService } from '../common/services/command-executor.service';\r\nimport { MessageService } from '../common/services/message.service';\r\nimport * as Utils from '../common/utils/ngx-editor.utils';\r\n\r\n@Component({\r\n  selector: 'app-ng6x-editor-toolbar',\r\n  templateUrl: './ngx-editor-toolbar.component.html',\r\n  styleUrls: ['./ngx-editor-toolbar.component.scss'],\r\n  providers: [PopoverConfig]\r\n})\r\n\r\nexport class NgxEditorToolbarComponent implements OnInit {\r\n\r\n  /** holds values of the insert link form */\r\n  urlForm: FormGroup;\r\n  /** holds values of the insert image form */\r\n  imageForm: FormGroup;\r\n  /** holds values of the insert video form */\r\n  videoForm: FormGroup;\r\n  /** set to false when image is being uploaded */\r\n  uploadComplete = true;\r\n  /** upload percentage */\r\n  updloadPercentage = 0;\r\n  /** set to true when the image is being uploaded */\r\n  isUploading = false;\r\n  /** which tab to active for color insetion */\r\n  selectedColorTab = 'textColor';\r\n  /** font family name */\r\n  fontName = '';\r\n  /** font size */\r\n  fontSize = '';\r\n  /** hex color code */\r\n  hexColor = '';\r\n  /** show/hide image uploader */\r\n  isImageUploader = false;\r\n\r\n  /**\r\n   * Editor configuration\r\n   */\r\n  @Input() config: any;\r\n  @ViewChild('urlPopover') urlPopover;\r\n  @ViewChild('imagePopover') imagePopover;\r\n  @ViewChild('videoPopover') videoPopover;\r\n  @ViewChild('fontSizePopover') fontSizePopover;\r\n  @ViewChild('colorPopover') colorPopover;\r\n  /**\r\n   * Emits an event when a toolbar button is clicked\r\n   */\r\n  @Output() execute: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor(private _popOverConfig: PopoverConfig,\r\n    private _formBuilder: FormBuilder,\r\n    private _messageService: MessageService,\r\n    private _commandExecutorService: CommandExecutorService) {\r\n    this._popOverConfig.outsideClick = true;\r\n    this._popOverConfig.placement = 'bottom';\r\n    this._popOverConfig.container = 'body';\r\n  }\r\n\r\n  /**\r\n   * enable or diable toolbar based on configuration\r\n   *\r\n   * @param value name of the toolbar buttons\r\n   */\r\n  canEnableToolbarOptions(value): boolean {\r\n    return Utils.canEnableToolbarOptions(value, this.config['toolbar']);\r\n  }\r\n\r\n  /**\r\n   * triggers command from the toolbar to be executed and emits an event\r\n   *\r\n   * @param command name of the command to be executed\r\n   */\r\n  triggerCommand(command: string): void {\r\n    this.execute.emit(command);\r\n  }\r\n\r\n  /**\r\n   * create URL insert form\r\n   */\r\n  buildUrlForm(): void {\r\n\r\n    this.urlForm = this._formBuilder.group({\r\n      urlLink: ['', [Validators.required]],\r\n      urlText: ['', [Validators.required]],\r\n      urlNewTab: [true]\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * inserts link in the editor\r\n   */\r\n  insertLink(): void {\r\n\r\n    try {\r\n      this._commandExecutorService.createLink(this.urlForm.value);\r\n    } catch (error) {\r\n      this._messageService.sendMessage(error.message);\r\n    }\r\n\r\n    /** reset form to default */\r\n    this.buildUrlForm();\r\n    /** close inset URL pop up */\r\n    this.urlPopover.hide();\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * create insert image form\r\n   */\r\n  buildImageForm(): void {\r\n\r\n    this.imageForm = this._formBuilder.group({\r\n      imageUrl: ['', [Validators.required]]\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * create insert image form\r\n   */\r\n  buildVideoForm(): void {\r\n\r\n    this.videoForm = this._formBuilder.group({\r\n      videoUrl: ['', [Validators.required]],\r\n      height: [''],\r\n      width: ['']\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Executed when file is selected\r\n   *\r\n   * @param e onChange event\r\n   */\r\n  onFileChange(e): void {\r\n\r\n    this.uploadComplete = false;\r\n    this.isUploading = true;\r\n\r\n    if (e.target.files.length > 0) {\r\n      const file = e.target.files[0];\r\n\r\n      try {\r\n        this._commandExecutorService.uploadImage(file, this.config.imageEndPoint).subscribe(event => {\r\n\r\n          if (event.type) {\r\n            this.updloadPercentage = Math.round(100 * event.loaded / event.total);\r\n          }\r\n\r\n          if (event instanceof HttpResponse) {\r\n            try {\r\n              this._commandExecutorService.insertImage(event.body.url);\r\n            } catch (error) {\r\n              this._messageService.sendMessage(error.message);\r\n            }\r\n            this.uploadComplete = true;\r\n            this.isUploading = false;\r\n          }\r\n        });\r\n      } catch (error) {\r\n        this._messageService.sendMessage(error.message);\r\n        this.uploadComplete = true;\r\n        this.isUploading = false;\r\n      }\r\n\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  /** insert image in the editor */\r\n  insertImage(): void {\r\n    try {\r\n      this._commandExecutorService.insertImage(this.imageForm.value.imageUrl);\r\n    } catch (error) {\r\n      this._messageService.sendMessage(error.message);\r\n    }\r\n\r\n    /** reset form to default */\r\n    this.buildImageForm();\r\n    /** close inset URL pop up */\r\n    this.imagePopover.hide();\r\n\r\n    return;\r\n  }\r\n\r\n  /** insert image in the editor */\r\n  insertVideo(): void {\r\n    try {\r\n      this._commandExecutorService.insertVideo(this.videoForm.value);\r\n    } catch (error) {\r\n      this._messageService.sendMessage(error.message);\r\n    }\r\n\r\n    /** reset form to default */\r\n    this.buildVideoForm();\r\n    /** close inset URL pop up */\r\n    this.videoPopover.hide();\r\n\r\n    return;\r\n  }\r\n\r\n  /** inser text/background color */\r\n  insertColor(color: string, where: string): void {\r\n\r\n    try {\r\n      this._commandExecutorService.insertColor(color, where);\r\n    } catch (error) {\r\n      this._messageService.sendMessage(error.message);\r\n    }\r\n\r\n    this.colorPopover.hide();\r\n    return;\r\n  }\r\n\r\n  /** set font size */\r\n  setFontSize(fontSize: string): void {\r\n\r\n    try {\r\n      this._commandExecutorService.setFontSize(fontSize);\r\n    } catch (error) {\r\n      this._messageService.sendMessage(error.message);\r\n    }\r\n\r\n    this.fontSizePopover.hide();\r\n    return;\r\n  }\r\n\r\n  /** set font Name/family */\r\n  setFontName(fontName: string): void {\r\n\r\n    try {\r\n      this._commandExecutorService.setFontName(fontName);\r\n    } catch (error) {\r\n      this._messageService.sendMessage(error.message);\r\n    }\r\n\r\n    this.fontSizePopover.hide();\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * allow only numbers\r\n   *\r\n   * @param event keypress event\r\n   */\r\n  onlyNumbers(event: KeyboardEvent): boolean {\r\n    return event.charCode >= 48 && event.charCode <= 57;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildUrlForm();\r\n    this.buildImageForm();\r\n    this.buildVideoForm();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { PopoverModule } from 'ngx-bootstrap';\r\nimport { NgxEditorComponent } from './ngx-editor.component';\r\nimport { NgxGrippieComponent } from './ngx-grippie/ngx-grippie.component';\r\nimport { NgxEditorMessageComponent } from './ngx-editor-message/ngx-editor-message.component';\r\nimport { NgxEditorToolbarComponent } from './ngx-editor-toolbar/ngx-editor-toolbar.component';\r\nimport { MessageService } from './common/services/message.service';\r\nimport { CommandExecutorService } from './common/services/command-executor.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, PopoverModule.forRoot()],\r\n  declarations: [NgxEditorComponent, NgxGrippieComponent, NgxEditorMessageComponent, NgxEditorToolbarComponent],\r\n  exports: [NgxEditorComponent, PopoverModule],\r\n  providers: [CommandExecutorService, MessageService]\r\n})\r\n\r\nexport class NgxEditorModule { }\r\n"],"names":["Utils.restoreSelection","HttpRequest","Injectable","HttpClient","Subject","EventEmitter","Utils.saveSelection","Component","NG_VALUE_ACCESSOR","forwardRef","Renderer2","Input","Output","ViewChild","HostListener","Utils.canEnableToolbarOptions","Validators","HttpResponse","PopoverConfig","FormBuilder","NgModule","CommonModule","FormsModule","ReactiveFormsModule","PopoverModule"],"mappings":";;;;;;;;;;;;;;;;;AAMA,qCAAwC,KAAa,EAAE,OAAY;QAE/D,IAAI,KAAK,EAAE;YAEP,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;gBACzB,OAAO,IAAI,CAAC;aACf;iBAAM;;gBAEH,IAAM,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,UAAA,KAAK;oBAC9B,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;iBACtC,CAAC,CAAC;gBAEH,OAAO,KAAK,CAAC,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC;aACtC;SACJ;aAAM;YACH,OAAO,KAAK,CAAC;SAChB;KACJ;;;;;;;;;AASD,oCAAuC,KAAU,EAAE,eAAoB,EAAE,KAAU;QAE/E,KAAK,IAAM,CAAC,IAAI,eAAe,EAAE;YAC7B,IAAI,CAAC,EAAE;gBAEH,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;oBACxB,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;iBACvB;gBAED,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;oBAC1B,KAAK,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;iBACjC;aACJ;SACJ;QAED,OAAO,KAAK,CAAC;KAChB;;;;;;;AAOD,uBAA0B,OAAe;QACrC,IAAI,OAAO,KAAK,OAAO,EAAE;YACrB,OAAO,UAAU,CAAC;SACrB;QACD,OAAO,KAAK,CAAC;KAChB;;;;;AAKD;QACI,IAAI,MAAM,CAAC,YAAY,EAAE;;YACrB,IAAM,GAAG,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;YAClC,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,CAAC,UAAU,EAAE;gBAClC,OAAO,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;aAC5B;SACJ;aAAM,IAAI,QAAQ,CAAC,YAAY,IAAI,QAAQ,CAAC,WAAW,EAAE;YACtD,OAAO,QAAQ,CAAC,WAAW,EAAE,CAAC;SACjC;QACD,OAAO,IAAI,CAAC;KACf;;;;;;;AAOD,8BAAiC,KAAK;QAClC,IAAI,KAAK,EAAE;YACP,IAAI,MAAM,CAAC,YAAY,EAAE;;gBACrB,IAAM,GAAG,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;gBAClC,GAAG,CAAC,eAAe,EAAE,CAAC;gBACtB,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACpB,OAAO,IAAI,CAAC;aACf;iBAAM,IAAI,QAAQ,CAAC,YAAY,IAAI,KAAK,CAAC,MAAM,EAAE;gBAC9C,KAAK,CAAC,MAAM,EAAE,CAAC;gBACf,OAAO,IAAI,CAAC;aACf;SACJ;aAAM;YACH,OAAO,KAAK,CAAC;SAChB;KACJ;;;;;;;;;;;;;;AChGD;;;;;QAcE,gCAAoB,KAAiB;YAAjB,UAAK,GAAL,KAAK,CAAY;;;;kCANf,SAAS;SAMW;;;;;;;;;;;;QAO1C,wCAAO;;;;;;YAAP,UAAQ,OAAe;gBAErB,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,OAAO,KAAK,sBAAsB,EAAE;oBAC9D,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;iBACxC;gBAED,IAAI,OAAO,KAAK,sBAAsB,EAAE;oBACtC,QAAQ,CAAC,WAAW,CAAC,sBAAsB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;oBACzD,OAAO;iBACR;gBAED,IAAI,OAAO,KAAK,YAAY,EAAE;oBAC5B,QAAQ,CAAC,WAAW,CAAC,aAAa,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;oBACzD,OAAO;iBACR;gBAED,IAAI,OAAO,KAAK,kBAAkB,EAAE;oBAClC,QAAQ,CAAC,WAAW,CAAC,aAAa,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;oBAClD,OAAO;iBACR;gBAED,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;gBAC3C,OAAO;aACR;;;;;;;;;;;;QAOD,4CAAW;;;;;;YAAX,UAAY,QAAgB;gBAC1B,IAAI,IAAI,CAAC,cAAc,EAAE;oBACvB,IAAI,QAAQ,EAAE;;wBACZ,IAAM,QAAQ,GAAGA,gBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;wBAC7D,IAAI,QAAQ,EAAE;;4BACZ,IAAM,QAAQ,GAAG,QAAQ,CAAC,WAAW,CAAC,aAAa,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;4BACtE,IAAI,CAAC,QAAQ,EAAE;gCACb,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;6BAChC;yBACF;qBACF;iBACF;qBAAM;oBACL,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;iBAC5C;gBACD,OAAO;aACR;;;;;;;;;;;;QAOD,4CAAW;;;;;;YAAX,UAAY,UAAe;gBACzB,IAAI,IAAI,CAAC,cAAc,EAAE;oBACvB,IAAI,UAAU,EAAE;;wBACd,IAAM,QAAQ,GAAGA,gBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;wBAC7D,IAAI,QAAQ,EAAE;4BACZ,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;;gCAC3C,IAAM,UAAU,GAAG,iBAAiB,GAAG,UAAU,CAAC,KAAK,GAAG,YAAY,GAAG,UAAU,CAAC,MAAM,GAAG,GAAG;sCAC5F,OAAO,GAAG,UAAU,CAAC,QAAQ,GAAG,aAAa,CAAC;gCAClD,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;6BAC7B;iCAAM,IAAI,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,EAAE;gCAEjD,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;;oCACxC,IAAM,QAAQ,GAAG,gBAAgB,GAAG,UAAU,CAAC,KAAK,GAAG,YAAY,GAAG,UAAU,CAAC,MAAM,GAAG,GAAG;0CACzF,gCAAgC,GAAG,UAAU,CAAC,QAAQ,GAAG,YAAY,CAAC;oCAC1E,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;iCAC3B;qCAAM;oCACL,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;iCACtC;6BAEF;iCAAM;gCACL,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;6BAC3C;yBACF;qBACF;iBACF;qBAAM;oBACL,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;iBAC5C;gBACD,OAAO;aACR;;;;;;;QAOO,8CAAa;;;;;;sBAAC,GAAW;;gBAC/B,IAAM,QAAQ,GAAG,uDAAuD,CAAC;gBACzE,OAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;;;;;;QAOpB,2CAAU;;;;;sBAAC,GAAW;;gBAC5B,IAAM,SAAS,GAAG,6EAA6E,CAAC;gBAChG,OAAO,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;;;;;;;;;;;;;;QAS7B,4CAAW;;;;;;;YAAX,UAAY,IAAU,EAAE,QAAgB;gBAEtC,IAAI,CAAC,QAAQ,EAAE;oBACb,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;iBAC7D;;gBAED,IAAM,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;gBAE1C,IAAI,IAAI,EAAE;oBAER,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;;oBAE9B,IAAM,GAAG,GAAG,IAAIC,gBAAW,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE;wBACtD,cAAc,EAAE,IAAI;qBACrB,CAAC,CAAC;oBAEH,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;iBAEhC;qBAAM;oBACL,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;iBAClC;aACF;;;;;;;;;;;;QAOD,2CAAU;;;;;;YAAV,UAAW,MAAW;gBAEpB,IAAI,IAAI,CAAC,cAAc,EAAE;;;;oBAIvB,IAAI,MAAM,CAAC,SAAS,EAAE;;wBACpB,IAAM,MAAM,GAAG,WAAW,GAAG,MAAM,CAAC,OAAO,GAAG,oBAAoB,GAAG,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;wBAE7F,IAAI,QAAQ,CAAC,YAAY,EAAE,CAAC,IAAI,KAAK,OAAO,EAAE;;4BAC5C,IAAM,QAAQ,GAAGD,gBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;4BAC7D,IAAI,QAAQ,EAAE;gCACZ,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;6BACzB;yBACF;6BAAM;4BACL,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;yBAC1E;qBACF;yBAAM;;wBACL,IAAM,QAAQ,GAAGA,gBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;wBAC7D,IAAI,QAAQ,EAAE;4BACZ,QAAQ,CAAC,WAAW,CAAC,YAAY,EAAE,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;yBAC3D;qBACF;iBACF;qBAAM;oBACL,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;iBAC5C;gBAED,OAAO;aACR;;;;;;;;;;;;;;QAQD,4CAAW;;;;;;;YAAX,UAAY,KAAa,EAAE,KAAa;gBAEtC,IAAI,IAAI,CAAC,cAAc,EAAE;;oBACvB,IAAM,QAAQ,GAAGA,gBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBAC7D,IAAI,QAAQ,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;wBACrC,IAAI,KAAK,KAAK,WAAW,EAAE;4BACzB,QAAQ,CAAC,WAAW,CAAC,WAAW,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;yBACjD;6BAAM;4BACL,QAAQ,CAAC,WAAW,CAAC,aAAa,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;yBACnD;qBACF;iBAEF;qBAAM;oBACL,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;iBAC5C;gBAED,OAAO;aACR;;;;;;;;;;;;QAOD,4CAAW;;;;;;YAAX,UAAY,QAAgB;gBAE1B,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;;oBAChD,IAAM,YAAY,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;oBAEhD,IAAI,YAAY,EAAE;;wBAEhB,IAAM,QAAQ,GAAGA,gBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;wBAE7D,IAAI,QAAQ,EAAE;4BACZ,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;;gCAC5B,IAAM,MAAM,GAAG,0BAA0B,GAAG,QAAQ,GAAG,OAAO,GAAG,YAAY,GAAG,SAAS,CAAC;gCAC1F,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;6BACzB;iCAAM;;gCACL,IAAM,MAAM,GAAG,0BAA0B,GAAG,QAAQ,GAAG,KAAK,GAAG,YAAY,GAAG,SAAS,CAAC;gCACxF,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;6BACzB;yBACF;qBACF;iBAEF;qBAAM;oBACL,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;iBAC5C;aACF;;;;;;;;;;;;QAOD,4CAAW;;;;;;YAAX,UAAY,QAAgB;gBAE1B,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;;oBAChD,IAAM,YAAY,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;oBAEhD,IAAI,YAAY,EAAE;;wBAEhB,IAAM,QAAQ,GAAGA,gBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;wBAE7D,IAAI,QAAQ,EAAE;4BACZ,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;;gCAC5B,IAAM,UAAU,GAAG,4BAA4B,GAAG,QAAQ,GAAG,OAAO,GAAG,YAAY,GAAG,SAAS,CAAC;gCAChG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;6BAC7B;iCAAM;;gCACL,IAAM,UAAU,GAAG,4BAA4B,GAAG,QAAQ,GAAG,KAAK,GAAG,YAAY,GAAG,SAAS,CAAC;gCAC9F,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;6BAC7B;yBACF;qBACF;iBAEF;qBAAM;oBACL,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;iBAC5C;aACF;;;;;;QAGO,2CAAU;;;;;sBAAC,IAAY;;gBAE7B,IAAM,cAAc,GAAG,QAAQ,CAAC,WAAW,CAAC,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;gBAEvE,IAAI,CAAC,cAAc,EAAE;oBACnB,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;iBACpD;gBAED,OAAO;;;;;;;;;QAQD,0CAAS;;;;;;;sBAAC,KAAU;gBAC1B,OAAO,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;;;;;QAI3B,oDAAmB;;;;;;gBAEzB,IAAI,WAAW,CAAC;gBAEhB,IAAI,IAAI,CAAC,cAAc,EAAE;oBACvB,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;oBAC7C,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;oBACrC,OAAO,WAAW,CAAC;iBACpB;gBAED,OAAO,KAAK,CAAC;;;;;;QAKP,+CAAc;;;;;;gBAEpB,IAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;gBAEnD,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC5B,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;iBACtC;gBAED,OAAO,IAAI,CAAC;;;;;;;;QAQN,yDAAwB;;;;;;sBAAC,GAAW;gBAC1C,OAAO,EAAE,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,kBAAkB,CAAC,CAAC;;;oBAjUvEE,eAAU;;;;;wBAHFC,eAAU;;;qCADnB;;;;;;;ACAA;;;IAMA,IAAM,QAAQ,GAAG,IAAI,CAAC;;QAQpB;;;;2BAFmC,IAAIC,YAAO,EAAE;SAE/B;;;;;;QAGjB,mCAAU;;;;YAAV;gBACE,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;aACpC;;;;;;;;;;;;QAOD,oCAAW;;;;;;YAAX,UAAY,OAAe;gBACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC3B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;gBAC9B,OAAO;aACR;;;;;;;QAOO,uCAAc;;;;;;sBAAC,YAAoB;;gBACzC,UAAU,CAAC;oBACT,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAC9B,EAAE,YAAY,CAAC,CAAC;gBACjB,OAAO;;;oBAjCVF,eAAU;;;;6BARX;;;;;;;;;;ACGA,QAAa,eAAe,GAAG;QAC3B,QAAQ,EAAE,IAAI;QACd,UAAU,EAAE,IAAI;QAChB,MAAM,EAAE,MAAM;QACd,SAAS,EAAE,GAAG;QACd,KAAK,EAAE,MAAM;QACb,QAAQ,EAAE,GAAG;QACb,SAAS,EAAE,KAAK;QAChB,aAAa,EAAE,IAAI;QACnB,WAAW,EAAE,IAAI;QACjB,WAAW,EAAE,oBAAoB;QACjC,aAAa,EAAE,EAAE;QACjB,OAAO,EAAE;YACL,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,eAAe,EAAE,aAAa,EAAE,WAAW,CAAC;YAC5E,CAAC,UAAU,EAAE,UAAU,EAAE,OAAO,CAAC;YACjC,CAAC,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC;YACpF,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,cAAc,EAAE,MAAM,EAAE,MAAM,CAAC;YACzD,CAAC,WAAW,EAAE,YAAY,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,aAAa,EAAE,eAAe,CAAC;YACjG,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC;SACvC;KACJ,CAAC;;;;;;ACvBF;;;;;;QA+FE,4BACU,iBACA,kBACA;YAFA,oBAAe,GAAf,eAAe;YACf,qBAAgB,GAAhB,gBAAgB;YAChB,cAAS,GAAT,SAAS;;;;;;;;2BApCA,OAAO;;;;;;;0BAOR,eAAe;;;;wBASM,IAAIG,iBAAY,EAAU;;;;yBAEzB,IAAIA,iBAAY,EAAU;yBAKrD,KAAK;SAaiB;;;;;;;;QAKnC,4CAAe;;;;YAAf;gBACE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACzB,OAAO;aACR;;;;;;QAGD,0CAAa;;;;YAAb;gBACE,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;aACrC;;;;;;;;;;QAMD,4CAAe;;;;;YAAf,UAAgB,IAAY;gBAE1B,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,UAAU,EAAE;oBACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBACpB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;iBAC9B;gBAED,OAAO;aACR;;;;QAED,2CAAc;;;YAAd;;gBAGE,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAGC,aAAmB,EAAE,CAAC;gBAE7D,IAAI,OAAO,IAAI,CAAC,SAAS,KAAK,UAAU,EAAE;oBACxC,IAAI,CAAC,SAAS,EAAE,CAAC;iBAClB;gBACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACvB,OAAO;aACR;;;;;;;;;;;;QAOD,2CAAc;;;;;;YAAd,UAAe,OAAe;;gBAC5B,IAAI,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;gBAC1C,SAAS,IAAI,OAAO,CAAC;gBACrB,IAAI,CAAC,MAAM,GAAG,SAAS,GAAG,IAAI,CAAC;gBAC/B,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBACvD,OAAO;aACR;;;;;;;;;;;;QAOD,2CAAc;;;;;;YAAd,UAAe,WAAmB;gBAEhC,IAAI;oBACF,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;iBAC5C;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;iBACjD;gBAED,OAAO;aACR;;;;;;;;;;;;QAOD,uCAAU;;;;;;YAAV,UAAW,KAAU;gBAEnB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;gBAE9B,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,EAAE,IAAI,KAAK,KAAK,MAAM,EAAE;oBAC7E,KAAK,GAAG,IAAI,CAAC;iBACd;gBAED,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aACzB;;;;;;;;;;;;;;QAQD,6CAAgB;;;;;;;YAAhB,UAAiB,EAAO;gBACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;aACpB;;;;;;;;;;;;;;QAQD,8CAAiB;;;;;;;YAAjB,UAAkB,EAAO;gBACvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;aACrB;;;;;;;;;;;;QAOD,wCAAW;;;;;;YAAX,UAAY,KAAa;;gBACvB,IAAM,eAAe,GAAG,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC;gBACpD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;gBACtF,OAAO;aACR;;;;;;;;;;;;QAOD,8CAAiB;;;;;;YAAjB,UAAkB,KAAU;gBAC1B,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,EAAE,EAAE;oBAC9C,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC;iBAC5E;qBAAM;oBACL,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC;iBAC/E;gBACD,OAAO;aACR;;;;;;;;QAKD,gDAAmB;;;;YAAnB;gBACE,OAAO;oBACL,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,WAAW,EAAE,IAAI,CAAC,WAAW;oBAC7B,SAAS,EAAE,IAAI,CAAC,SAAS;oBACzB,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,SAAS,EAAE,IAAI,CAAC,SAAS;oBACzB,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,aAAa,EAAE,IAAI,CAAC,aAAa;oBACjC,WAAW,EAAE,IAAI,CAAC,WAAW;oBAC7B,aAAa,EAAE,IAAI,CAAC,aAAa;oBACjC,OAAO,EAAE,IAAI,CAAC,OAAO;iBACtB,CAAC;aACH;;;;QAED,qCAAQ;;;YAAR;;;;gBAIE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,EAAE,eAAe,EAAE,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;gBAE1G,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC;gBAEtE,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,CAAC;aAE7C;;oBAvPFC,cAAS,SAAC;wBACT,QAAQ,EAAE,iBAAiB;wBAC3B,qjCAA0C;wBAE1C,SAAS,EAAE;4BACT;gCACE,OAAO,EAAEC,uBAAiB;gCAC1B,WAAW,EAAEC,eAAU,CAAC,cAAM,OAAA,kBAAkB,GAAA,CAAC;gCACjD,KAAK,EAAE,IAAI;6BACZ;yBACF;;qBACF;;;;;wBAhBQ,cAAc;wBADd,sBAAsB;wBAJfC,cAAS;;;;+BA0BtBC,UAAK;iCAELA,UAAK;kCAELA,UAAK;gCAMLA,UAAK;6BAELA,UAAK;gCAELA,UAAK;4BAELA,UAAK;+BAELA,UAAK;8BAQLA,UAAK;8BAQLA,UAAK;6BAOLA,UAAK;kCAELA,UAAK;oCAELA,UAAK;oCAELA,UAAK;2BAGLC,WAAM;4BAENA,WAAM;+BAENC,cAAS,SAAC,aAAa;iCACvBA,cAAS,SAAC,YAAY;;iCAnFzB;;;;;;;ACAA;;;;;;QAuBE,6BAAoB,gBAAoC;YAApC,qBAAgB,GAAhB,gBAAgB,CAAoB;;;;wBATjD,CAAC;;;;2BAEE,KAAK;SAO8C;;;;;;;;;;;;;;QAQb,yCAAW;;;;;;;YAA3D,UAA4D,KAAiB;gBAE3E,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oBACjB,OAAO;iBACR;gBAED,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;gBAChE,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC;aAC3B;;;;;;;;;;;;;;QAQ6C,uCAAS;;;;;;;YAAvD,UAAwD,KAAiB;gBACvE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACtB;;;;;;QAEsC,sCAAQ;;;;;YAA/C,UAAgD,KAAiB,EAAE,OAAkB;gBACnF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC;gBAC1B,KAAK,CAAC,cAAc,EAAE,CAAC;aACxB;;oBApDFN,cAAS,SAAC;wBACT,QAAQ,EAAE,iBAAiB;wBAC3B,kxBAA2C;;qBAE5C;;;;;wBANQ,kBAAkB;;;;kCA8BxBO,iBAAY,SAAC,oBAAoB,EAAE,CAAC,QAAQ,CAAC;gCAgB7CA,iBAAY,SAAC,kBAAkB,EAAE,CAAC,QAAQ,CAAC;+BAI3CA,iBAAY,SAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;;kCAnDvC;;;;;;;ACAA;;;;QAkBE,mCAAoB,eAA+B;YAAnD,iBAEC;YAFmB,oBAAe,GAAf,eAAe,CAAgB;;;;8BALtC,SAAS;YAMpB,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAC,OAAe,IAAK,OAAA,KAAI,CAAC,UAAU,GAAG,OAAO,GAAA,CAAC,CAAC;SAC7F;;;;;;;;QAKD,gDAAY;;;;YAAZ;gBACE,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;gBAC5B,OAAO;aACR;;oBAxBFP,cAAS,SAAC;wBACT,QAAQ,EAAE,yBAAyB;wBACnC,sIAAkD;;qBAEnD;;;;;wBANQ,cAAc;;;wCAFvB;;;;;;;ACAA;QAsDE,mCAAoB,cAA6B,EACvC,cACA,iBACA;YAHU,mBAAc,GAAd,cAAc,CAAe;YACvC,iBAAY,GAAZ,YAAY;YACZ,oBAAe,GAAf,eAAe;YACf,4BAAuB,GAAvB,uBAAuB;;;;kCAjChB,IAAI;;;;qCAED,CAAC;;;;+BAEP,KAAK;;;;oCAEA,WAAW;;;;4BAEnB,EAAE;;;;4BAEF,EAAE;;;;4BAEF,EAAE;;;;mCAEK,KAAK;;;;2BAcmB,IAAIF,iBAAY,EAAU;YAMlE,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,IAAI,CAAC;YACxC,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,QAAQ,CAAC;YACzC,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,MAAM,CAAC;SACxC;;;;;;;;;;;;QAOD,2DAAuB;;;;;;YAAvB,UAAwB,KAAK;gBAC3B,OAAOU,uBAA6B,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACrE;;;;;;;;;;;;QAOD,kDAAc;;;;;;YAAd,UAAe,OAAe;gBAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC5B;;;;;;;;QAKD,gDAAY;;;;YAAZ;gBAEE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;oBACrC,OAAO,EAAE,CAAC,EAAE,EAAE,CAACC,gBAAU,CAAC,QAAQ,CAAC,CAAC;oBACpC,OAAO,EAAE,CAAC,EAAE,EAAE,CAACA,gBAAU,CAAC,QAAQ,CAAC,CAAC;oBACpC,SAAS,EAAE,CAAC,IAAI,CAAC;iBAClB,CAAC,CAAC;gBAEH,OAAO;aACR;;;;;;;;QAKD,8CAAU;;;;YAAV;gBAEE,IAAI;oBACF,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;iBAC7D;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;iBACjD;;gBAGD,IAAI,CAAC,YAAY,EAAE,CAAC;;gBAEpB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;gBAEvB,OAAO;aACR;;;;;;;;QAKD,kDAAc;;;;YAAd;gBAEE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;oBACvC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACA,gBAAU,CAAC,QAAQ,CAAC,CAAC;iBACtC,CAAC,CAAC;gBAEH,OAAO;aACR;;;;;;;;QAKD,kDAAc;;;;YAAd;gBAEE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;oBACvC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACA,gBAAU,CAAC,QAAQ,CAAC,CAAC;oBACrC,MAAM,EAAE,CAAC,EAAE,CAAC;oBACZ,KAAK,EAAE,CAAC,EAAE,CAAC;iBACZ,CAAC,CAAC;gBAEH,OAAO;aACR;;;;;;;;;;;;QAOD,gDAAY;;;;;;YAAZ,UAAa,CAAC;gBAAd,iBAkCC;gBAhCC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBAExB,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;;oBAC7B,IAAM,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAE/B,IAAI;wBACF,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAA,KAAK;4BAEvF,IAAI,KAAK,CAAC,IAAI,EAAE;gCACd,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;6BACvE;4BAED,IAAI,KAAK,YAAYC,iBAAY,EAAE;gCACjC,IAAI;oCACF,KAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iCAC1D;gCAAC,OAAO,KAAK,EAAE;oCACd,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;iCACjD;gCACD,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gCAC3B,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;6BAC1B;yBACF,CAAC,CAAC;qBACJ;oBAAC,OAAO,KAAK,EAAE;wBACd,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;wBAChD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;qBAC1B;iBAEF;gBAED,OAAO;aACR;;;;;;QAGD,+CAAW;;;;YAAX;gBACE,IAAI;oBACF,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;iBACzE;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;iBACjD;;gBAGD,IAAI,CAAC,cAAc,EAAE,CAAC;;gBAEtB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;gBAEzB,OAAO;aACR;;;;;;QAGD,+CAAW;;;;YAAX;gBACE,IAAI;oBACF,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;iBAChE;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;iBACjD;;gBAGD,IAAI,CAAC,cAAc,EAAE,CAAC;;gBAEtB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;gBAEzB,OAAO;aACR;;;;;;;;QAGD,+CAAW;;;;;;YAAX,UAAY,KAAa,EAAE,KAAa;gBAEtC,IAAI;oBACF,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;iBACxD;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;iBACjD;gBAED,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;gBACzB,OAAO;aACR;;;;;;;QAGD,+CAAW;;;;;YAAX,UAAY,QAAgB;gBAE1B,IAAI;oBACF,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;iBACpD;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;iBACjD;gBAED,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;gBAC5B,OAAO;aACR;;;;;;;QAGD,+CAAW;;;;;YAAX,UAAY,QAAgB;gBAE1B,IAAI;oBACF,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;iBACpD;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;iBACjD;gBAED,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;gBAC5B,OAAO;aACR;;;;;;;;;;;;QAOD,+CAAW;;;;;;YAAX,UAAY,KAAoB;gBAC9B,OAAO,KAAK,CAAC,QAAQ,IAAI,EAAE,IAAI,KAAK,CAAC,QAAQ,IAAI,EAAE,CAAC;aACrD;;;;QAED,4CAAQ;;;YAAR;gBACE,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;;oBAjQFV,cAAS,SAAC;wBACT,QAAQ,EAAE,yBAAyB;wBACnC,2zhBAAkD;wBAElD,SAAS,EAAE,CAACW,0BAAa,CAAC;;qBAC3B;;;;;wBAVQA,0BAAa;wBAFbC,iBAAW;wBAIX,cAAc;wBADd,sBAAsB;;;;6BAuC5BR,UAAK;iCACLE,cAAS,SAAC,YAAY;mCACtBA,cAAS,SAAC,cAAc;mCACxBA,cAAS,SAAC,cAAc;sCACxBA,cAAS,SAAC,iBAAiB;mCAC3BA,cAAS,SAAC,cAAc;8BAIxBD,WAAM;;wCApDT;;;;;;;ACAA;;;;oBAYCQ,aAAQ,SAAC;wBACR,OAAO,EAAE,CAACC,mBAAY,EAAEC,iBAAW,EAAEC,yBAAmB,EAAEC,0BAAa,CAAC,OAAO,EAAE,CAAC;wBAClF,YAAY,EAAE,CAAC,kBAAkB,EAAE,mBAAmB,EAAE,yBAAyB,EAAE,yBAAyB,CAAC;wBAC7G,OAAO,EAAE,CAAC,kBAAkB,EAAEA,0BAAa,CAAC;wBAC5C,SAAS,EAAE,CAAC,sBAAsB,EAAE,cAAc,CAAC;qBACpD;;8BAjBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
